
name: build-workflow

on:
  workflow_run:
    workflows: ["commit-workflow"]
    branches: [main, continuous_integration]
    types:
      - completed
  workflow_dispatch:
    branches: [ main, continuous_integration ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build_amd64:

    name: Build tedge and mapper Debian packages for amd64
    runs-on: Ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: enable toolchain via github action
        # https://github.com/actions-rs/toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Enable cache
        # https://github.com/marketplace/actions/rust-cache
        uses: Swatinem/rust-cache@v1

      - name: Install cargo-deb
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: install
          args: cargo-deb

      - name: Build tedge debian package
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: deb
          args: -p tedge

      - name: Build tedge_mapper debian package
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: deb
          args: -p tedge_mapper

      - name: Build collectd_mapper debian package
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: deb
          args: -p collectd_mapper

      - name: build examples for amd64
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: build
          args: --release --examples

      - name: Upload artifacts as zip
        # https://github.com/marketplace/actions/upload-a-build-artifact
        uses: actions/upload-artifact@v2
        with:
          name: debian-packages-amd64
          path: target/debian/*.deb

      - name: upload amd64 examples as zip
        # https://github.com/marketplace/actions/upload-a-build-artifact
        uses: actions/upload-artifact@v2
        with:
          name: examples_amd64
          path: target/release/examples/sawtooth_publisher

  build_matrix_arm:

    name: Build packages for targets
    runs-on: Ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    strategy:
      matrix:
        # Currently only arm targets, as we use a custom strip binary !
        target: [armv7-unknown-linux-gnueabihf, arm-unknown-linux-gnueabihf, armv7-unknown-linux-musleabihf]

    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: enable toolchain via github action
        # https://github.com/actions-rs/toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Enable cache
        # https://github.com/marketplace/actions/rust-cache
        uses: Swatinem/rust-cache@v1

      - name: install cargo-deb
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: install
          args: cargo-deb

      - name: install cargo-strip
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: install
          args: cargo-strip

      - name: build cross release for target
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

#      - name: strip binaries (cargo deb fails to strip)
#        # IMHO cargo-strip does not work on debian for other targets
#        # -> https://github.com/guedou/cargo-strip
#        # TODO This does not seem to work right
#        uses: actions-rs/cargo@v1
#        # https://github.com/marketplace/actions/rust-cargo
#        with:
#          use-cross: true
#          command: strip
#          args: --target=${{ matrix.target }}

      - name: Install our own binutils
        run: sudo apt-get --assume-yes install binutils-arm-linux-gnueabihf

      - name: Strip workaround tedge
        run: arm-linux-gnueabihf-strip target/${{ matrix.target }}/release/tedge

      - name: Strip workaround tedge_mapper
        run: arm-linux-gnueabihf-strip target/${{ matrix.target }}/release/tedge_mapper

      - name: build tedge debian package for target
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: deb
          args: -p tedge --no-strip --no-build --target=${{ matrix.target }}

      - name: build tedge_mapper debian package for target
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: deb
          args: -p tedge_mapper --no-strip --no-build --target=${{ matrix.target }}

      - name: build collectd_mapper debian package for target
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: deb
          args: -p collectd_mapper --no-strip --no-build --target=${{ matrix.TARGET }}

      - name: build collectd_mapper debian package for target
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          command: deb
          args: -p collectd_mapper --no-strip --no-build --target=${{ env.TARGET }}
 
      - name: build examples
        uses: actions-rs/cargo@v1
        # https://github.com/marketplace/actions/rust-cargo
        with:
          use-cross: true
          command: build
          args: --release --examples --target=${{ matrix.target }}

      - name: Strip workaround sawtooth_publisher
        run: arm-linux-gnueabihf-strip target/${{ matrix.target }}/release/examples/sawtooth_publisher

      - name: upload debian packages as zip
        # https://github.com/marketplace/actions/upload-a-build-artifact
        uses: actions/upload-artifact@v2
        with:
          name: debian-packages-${{ matrix.target }}
          path: target/${{ matrix.target }}/debian/*.deb

      - name: upload examples as zip
        # https://github.com/marketplace/actions/upload-a-build-artifact
        uses: actions/upload-artifact@v2
        with:
          name: examples_${{ matrix.target }}
          path: target/${{ matrix.target }}/release/examples/sawtooth_publisher

