
name: setup_tedge_pipeline

on:
  push:
    branches: [main, continuous_integration]
  workflow_dispatch:
    branches: [main, continuous_integration]

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo-fmt:
    name: Run cargo fmt
    runs-on: Ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

#################################################################################

  install-and-use-ubuntu-2gb-hel1-4-thin-edge-a:
    runs-on: [self-hosted, Linux, X64, ubuntu-2gb-hel1-4-thin-edge-a ]
    needs: [build_matrix_arm]

    env:
        C8YPASS: ${{ secrets.SECRET_C8YPASS }}
        C8YUSERNAME: ${{ secrets.SECRET_C8YUSERNAME }}
        C8YTENANT: ${{secrets.SECRET_C8YTENANT}}
        C8YDEVICE: ubuntu-2gb-hel1-4-thin-edge-a
        TEBASEDIR: /home/pi/actions-runner/_work/thin-edge.io/thin-edge.io/
        EXAMPLEDIR: /home/pi/examples
        C8YURL: https://thin-edge-io.eu-latest.cumulocity.com
        IOTHUBNAME: ${{ secrets.IOTHUBNAME }}

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - run: ./ci/setup_tedge.sh checkvars
      - run: ./ci/setup_tedge.sh disconnect
      - run: ./ci/setup_tedge.sh cleanup
      - run: ./ci/setup_tedge.sh gitclone
      - run: ./ci/setup_tedge.sh download
      - run: ./ci/setup_tedge.sh install_deps
      - run: ./ci/setup_tedge.sh install
      - run: ./ci/setup_tedge.sh tedge_help
      - run: ./ci/setup_tedge.sh setupenv
      - run: ./ci/setup_tedge.sh configure_collectd
      - run: ./ci/setup_tedge.sh configure
      - run: ./ci/setup_tedge.sh smoketest

# Run tests for Azure
# Enable this, when we have decided about how many runners we use
#
#      - name: Run Smoke Test for Azure
#        run: ./ci/ci_smoke_test_az.sh
#        env:
#          SASKEYQUEUE: ${{ secrets.SASKEYQUEUE }}
#          SASKEYIOTHUB: ${{ secrets.SASKEYIOTHUB }}
#          AZUREENDPOINT: ${{ secrets.AZUREENDPOINT }}
#          AZUREEVENTHUB: ${{ secrets.AZUREEVENTHUB }}
#          IOTHUBNAME: ${{ secrets.IOTHUBNAME }}

#################################################################################


#################################################################################

  install-and-use-ubuntu-2gb-hel1-4-thin-edge-b:
    runs-on: [self-hosted, Linux, X64, ubuntu-2gb-hel1-4-thin-edge-b ]
    needs: [build_matrix_arm]

    env:
        C8YPASS: ${{ secrets.SECRET_C8YPASS }}
        C8YUSERNAME: ${{ secrets.SECRET_C8YUSERNAME }}
        C8YTENANT: ${{secrets.SECRET_C8YTENANT}}
        C8YDEVICE: ubuntu-2gb-hel1-4-thin-edge-b
        TEBASEDIR: /home/pi/actions-runner/_work/thin-edge.io/thin-edge.io/
        EXAMPLEDIR: /home/pi/examples
        C8YURL: https://thin-edge-io.eu-latest.cumulocity.com
        IOTHUBNAME: ${{ secrets.IOTHUBNAME }}

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - run: ./ci/setup_tedge.sh checkvars
      - run: ./ci/setup_tedge.sh disconnect
      - run: ./ci/setup_tedge.sh cleanup
      - run: ./ci/setup_tedge.sh gitclone
      - run: ./ci/setup_tedge.sh download
      - run: ./ci/setup_tedge.sh install_deps
      - run: ./ci/setup_tedge.sh install
      - run: ./ci/setup_tedge.sh tedge_help
      - run: ./ci/setup_tedge.sh setupenv
      - run: ./ci/setup_tedge.sh configure_collectd
      - run: ./ci/setup_tedge.sh configure
      - run: ./ci/setup_tedge.sh smoketest

# Run tests for Azure
# Enable this, when we have decided about how many runners we use
#
#      - name: Run Smoke Test for Azure
#        run: ./ci/ci_smoke_test_az.sh
#        env:
#          SASKEYQUEUE: ${{ secrets.SASKEYQUEUE }}
#          SASKEYIOTHUB: ${{ secrets.SASKEYIOTHUB }}
#          AZUREENDPOINT: ${{ secrets.AZUREENDPOINT }}
#          AZUREEVENTHUB: ${{ secrets.AZUREEVENTHUB }}
#          IOTHUBNAME: ${{ secrets.IOTHUBNAME }}

#################################################################################

#################################################################################
#
#  system-test_offsite_a:
#    runs-on: [self-hosted, Linux, ARM, offsite_mythica]
#    needs: [install-and-use-rpi_mythica]
#
#    steps:
#
#    - name: checkout
#      uses: actions/checkout@v2
#
#    - name: Run all Tests
#      run:  bash  ./ci/ci_run_all_tests.sh
#      continue-on-error: true
#      if: true
#      env:
#            C8YPASS: ${{ secrets.SECRET_C8YPASS }}
#            C8YUSERNAME: ${{ secrets.SECRET_C8YUSERNAME }}
#            C8YDEVICE: mythica
#            C8YTENANT: ${{secrets.SECRET_C8YTENANT}}
#            C8YURL: https://thin-edge-io.eu-latest.cumulocity.com
#            TEBASEDIR: /home/pi/actions-runner/_work/thin-edge.io/thin-edge.io/
#            EXAMPLEDIR: /home/pi/examples
#
#    - name: Run all plugin tests
#      run:  bash  ./ci/ci_run_all_plugin_tests.sh
#      continue-on-error: true
#      if: true
#      env:
#            C8YPASS: ${{ secrets.SECRET_C8YPASS }}
#            C8YUSERNAME: ${{ secrets.SECRET_C8YUSERNAME }}
#            C8YDEVICE: mythica
#            C8YTENANT: ${{secrets.SECRET_C8YTENANT}}
#            TEBASEDIR: /home/pi/actions-runner/_work/thin-edge.io/thin-edge.io/
#            EXAMPLEDIR: /home/pi/examples
#            C8YURL: https://thin-edge-io.eu-latest.cumulocity.com
#
#    - name: Run all sm tests
#      run:  bash  ./ci/ci_run_all_sm_tests.sh
#      continue-on-error: true
#      if: true
#      env:
#            C8YPASS: ${{ secrets.SECRET_C8YPASS }}
#            C8YUSERNAME: ${{ secrets.SECRET_C8YUSERNAME }}
#            C8YDEVICE: mythica
#            C8YTENANT: ${{secrets.SECRET_C8YTENANT}}
#            TEBASEDIR: /home/pi/actions-runner/_work/thin-edge.io/thin-edge.io/
#            EXAMPLEDIR: /home/pi/examples
#            C8YURL: https://thin-edge-io.eu-latest.cumulocity.com
#
#    - name: Run all statistics tests
#      run:  bash  ./ci/ci_run_statistics.sh
#      continue-on-error: true
#      if: true
#      env:
#            C8YPASS: ${{ secrets.SECRET_C8YPASS }}
#            C8YUSERNAME: ${{ secrets.SECRET_C8YUSERNAME }}
#            C8YDEVICE: mythica
#            C8YTENANT: ${{secrets.SECRET_C8YTENANT}}
#            C8YURL: https://thin-edge-io.eu-latest.cumulocity.com
#            TEBASEDIR: /home/pi/actions-runner/_work/thin-edge.io/thin-edge.io/
#            EXAMPLEDIR: /home/pi/examples
#
#    - name: upload results as zip
#      # https://github.com/marketplace/actions/upload-a-build-artifact
#      uses: actions/upload-artifact@v2
#      with:
#        name: results_pysys_offsite_mythica
#        path: tests/
#
#################################################################################



